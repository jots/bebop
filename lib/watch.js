// Generated by CoffeeScript 1.6.3
module.exports = function(dir, server, opts) {
  var directoryFilter, fileFilter, fs, timeout, walk, watch, watchFile, watching, wss, _ref, _ref1;
  if (opts == null) {
    opts = {};
  }
  wss = require('./websocket')(server);
  directoryFilter = (_ref = opts.directoryFilter) != null ? _ref : ['!node_modules', '!.git'];
  fileFilter = (_ref1 = opts.fileFilter) != null ? _ref1 : ['!package.json', '!.*', '!npm-debug.log', '!Cakefile', '!README.md'];
  watching = {};
  fs = require('fs');
  walk = function(dir, callback) {
    var stream;
    stream = require('readdirp')({
      root: dir,
      directoryFilter: directoryFilter,
      fileFilter: fileFilter
    });
    return stream.on('data', function(file) {
      return callback(file.fullPath);
    });
  };
  watchFile = function(filename, callback) {
    if (watching[filename]) {
      watching[filename].close();
    }
    return watching[filename] = fs.watch(filename, function() {
      callback(filename);
      return watchFile(filename, callback);
    });
  };
  watch = function(dir, callback) {
    return walk(dir, function(filename) {
      return watchFile(filename, callback);
    });
  };
  timeout = (new Date()).getTime();
  return watch(dir, function(filename) {
    var now;
    now = (new Date()).getTime();
    if ((now - timeout) > 100) {
      wss.send({
        type: 'modified',
        filename: filename
      });
    }
    return timeout = now;
  });
};

/*
//@ sourceMappingURL=watch.map
*/
