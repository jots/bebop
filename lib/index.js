// Generated by CoffeeScript 1.6.3
var properties, wrapper;

wrapper = {
  attach: function(server) {
    var app, websocket;
    app = server.listeners("request")[0];
    if (typeof app === "function") {
      server.removeListener("request", app);
    }
    server.on("request", require("./middleware")(app));
    websocket = require("./websocket")(server);
    return {
      app: app,
      server: server,
      websocketServer: websocket.server,
      close: websocket.close,
      send: websocket.send
    };
  },
  reload: function(server, dir) {
    var bebop;
    if (dir == null) {
      dir = process.cwd();
    }
    bebop = this.attach(server);
    if (dir) {
      require("./watch")(dir, function(filename) {
        return bebop.send({
          type: "reload",
          filename: filename
        });
      });
    }
    return server;
  }
};

properties = {};

["client", "middleware", "server", "watch", "websocket"].forEach(function(property) {
  return properties[property] = {
    enumerable: true,
    get: function() {
      return require("./" + property);
    }
  };
});

Object.defineProperties(wrapper, properties);

module.exports = wrapper;

/*
//@ sourceMappingURL=index.map
*/
